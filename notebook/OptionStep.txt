--------------------------------------------------------------------------------------
----------------------------------------环境配置--------------------------------------
--------------------------------------------------------------------------------------

0.1 重装 Ubunt 20.4

1.1 拷贝文件

	cmake-3.5.1.tar.gz
	
	code-insiders_1.66.0-1646890574_amd64.deb  ----- （VScode 安装包）
	
	linuxSDK_V2.1.0.31.tar.gz
	
	opencv-4.5.5.tar.gz
	
	解压文件

1.2 换源 

1.3 打开终端：

ctrl + alt + t = terminal  == conselo  

1.4 备份 /etc/apt/sources.list 文件

sudo cp /etc/apt/sources.list /etc/apt/sources.list.old  

1.5 打开文件 

sudo gedit /etc/apt/sources.list

1.6 复制阿里ubuntu源20.04

deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse

1.7 重新获取软件包列表  [更新源]

sudo apt-get update

-----------------------------
-----------------------------

2.1 安装gcc
	
	sudo apt install gcc
	sudo apt install g++
	sudo apt-get install build-essential
	
--------------------------------------------------------------------------------------
----------------------------------------------cmake-----------------------------------
--------------------------------------------------------------------------------------

2.2 安装cmake :
	
	进入 cmake-3.5.1 目录 , 在当前目录打开终端
	
	sudo chmod -R 777 文件名      --修改权限  【或在查看文件属性--里面可以修改】
	
	sudo apt-get install build-essential cmake    
	
	gcc --version
	
	sudo ./bootstrap   

	cmake --version    检查是否安装成功   [ 成功 ： cmake version 3.16.3]

--------------------------------------------------------------------------------------
------------------------------OpenCV3.4.1安装-----------------------------------------
--------------------------------------------------------------------------------------
	
3.1 安装OpenCV依赖项：
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libatlas-base-dev gfortran libgtk2.0-dev libjpeg-dev libpng-dev

OpenCV依赖项 ----完成

3.2 解压：unzip opencv-4.5.5   [手动解压也可以]

3.3 进入opencv-4.5.5 ,创建文件夹build，进入build文件夹

3.4 打开终端，输入：   【如果不行，则输入： cmake ..】

	cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..

	make -j$(nproc)       

-------------------[ make 的时间有点久]

	sudo make install

	opencv_version      【检测是否安装成功】

-------------------------------------------------------------
---------------------linuxSDK_V2.1.0.31----------------------
-------------------------------------------------------------
4.1 安装驱动

4.2 解压

4.3 切换为root用户

	进入 linuxSDK_V2.1.0.31 中 打开终端

	sudo passwd root   【解除root锁定，为root用户设置密码】
	
	su root   	【切换为root用户】 ---输入刚刚设置的密码
	
	./install.sh    【执行 install.sh】
	
	
	reboot     【重启】
	
-------------------------------------------------------------
----------------------------启动程序-------------------------
-------------------------------------------------------------

5.1 准备工作：
	
	串口连接
	
	摄像头连接
	
	确保   GZEU_Jumper 文件   路径 与 CMakeLists.txt 中的一致
	
5.2 编译与执行：
	
	进入build文件：删除里面的文件，并打开终端
	
	su root   【切换用户】
	
	cmake ..
	
	make 
	
	./main    【执行程序】
	
	
5.3 注意：

如果要重新编译：

	1. 先删除build中的文件：
	
	sudo rm -rf *
	
	2. 再重复 5.2 的步骤
	

	



通讯协议：

	 	unsigned char data[10];
	union IntToCharUnion {
		int num;
		unsigned char data[4];
	}_IntToCharUnion;
	
	union op{
		short a;
		unsigned char data[2];
	}_op;
	
// 	data[0]=0x3d;
// 	data[1]=fire;
//  	_op.a=target_pitch;
// //	cout<<"serial "<<target_pitch<<endl;
// // 	//cout<<_IntToCharUnion.num<<endl;
//  	data[2]=_op.data[0];
//  	data[3]=_op.data[1];
// 	_op.a=target_yaw;
//  	data[4]=_op.data[0];
//  	data[5]=_op.data[1];
	
//  	_op.a = distance;
//  	data[6]=_op.data[0];
//  	data[7]=_op.data[1];


//  	data[8]=calcCRC(data,8);
//  	//cout<<(int)data[8]<<endl;
//  	data[9]=0;
	data[0] = 0x3d;
	data[1] = fire;
	_op.a=target_pitch;
	//cout<<"serial "<<target_pitch<<endl;
	//cout<<_IntToCharUnion.num<<endl;
	data[2]=_op.data[0];
	data[3]=_op.data[1];
	_op.a=target_yaw;
	data[4]=_op.data[0];
	data[5]=_op.data[1];
	
	_op.a = distance;
	data[6]=_op.data[0];
	data[7]=_op.data[1];
	data[8]= 0;
	data[9]= 0;
	if(SendData(data, 10) == true)





























